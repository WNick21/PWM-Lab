void setup() {
TCCR1A = 0b10000010; //Set to fast PWM
TCCR1B = 0b00011001; // Bits 3&4 select mode 14 -- bits 0,1,2 are prescalar
ICR1 = 15999; // Sets freq
OCR1A = 7999; //Duty Cycle
DDRB |= 0b00000010; //Pin 9 set for output
}

int Speed = 15999; //"Speed" used to act as a place holder for duty cycle

uint16_t Period = 4000; // desired period in milliseconds
uint16_t Divisor; //Divisor required for given Period
uint8_t DivMask = 0b11111000;

void periodBehavior(uint16_t Period){// Function to show motor behavior

  TCCR1B &= DivMask; // Clears divisor
 
 
  if (Period >= 1048){ // If greater than 4 seconds
    Divisor = 1024;         //div of1024
    TCCR1B |= 0b00000101;  //Set of the clock    
  }
 
  else if ((Period < 1048) && (Period > 262.144)){ //If between 4 seconds and 1 second
    Divisor = 256; //Use this devisor
    TCCR1B |= 0b00000100;   //Set up the clock 
  }
 
  else if ((Period < 262) && (Period > 32.768)){//If between 1 second and 262 miliseconds
    Divisor = 64;
    TCCR1B |= 0b00000011;
  }    
 
  else if ((Period < 32)&&(Period > 4.096)){ //If between 262 miliseconds and 32 miliseconds
    Divisor = 8;
    TCCR1B |= 0b00000010;
  }
 
  else { //otherwise do this
    Divisor = 1;
    TCCR1B |= 0b00000001;
  }
 
  ICR1 = uint16_t ((((Period *16000000)/ Divisor)+.5)-1); //Formula to set frequencey
  
  OCR1A = ((ICR1 + 1)*.5)-1;      //Formula to set duty cycle
  return;

}

int DutyCycle(int Speed, int newSpeed){//Function to demonstrate LED
  
  newSpeed = Speed; //Duty cyle = duty cyle
  OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);//Wait

  newSpeed = Speed * .9;//Duty cycle = 90% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .8;//Duty cycle = 80% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .7;//Duty cycle = 70% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .6;//Duty cycle = 60% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .5;//Duty cycle = 50% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .4;//Duty cycle = 40% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .3;//Duty cycle = 30% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .2;//Duty cycle = 20% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
  
  newSpeed = Speed * .1;//Duty cycle = 10% duty cyle
   OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);

  newSpeed = 0;//Duty cycle = 0% duty cyle
  OCR1A = newSpeed;//Assign duty cycle to ORC1A
  delay(1000);
}





void loop() {
  for(int i = 0; i<4; i++){//This is a loop to demonstrate the motor function
    if (i == 0){
      Period = 10;
    }
  else if (i == 1){
    Period = 100;
  }
  else if (i == 2){
    Period = 1000;
    
  }
  else if (i == 3){
    Period = 2000;
  }
  periodBehavior(Period);
  delay(5000);
  }
  for(int i = 0; i<10; i++){//This loop is for the LED function test
     DutyCycle(Speed, OCR1A);

 }
}
